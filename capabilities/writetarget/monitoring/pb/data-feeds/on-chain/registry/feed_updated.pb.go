// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: feed_updated.proto

package registry

import (
	monitoring "github.com/smartcontractkit/capabilities/libs/monitoring"
	common "github.com/smartcontractkit/chainlink-framework/capabilities/writetarget/monitoring/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The on-chain FeedUpdated event which is extracted from the tx/event data or
// the write-target WriteConfirmed event, after a write was confirmed (@see message: write-target.WriteConfirmed).
type FeedUpdated struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event data
	FeedId                string `protobuf:"bytes,1,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"` // bytes as hex string for readability
	ObservationsTimestamp uint32 `protobuf:"varint,2,opt,name=observations_timestamp,json=observationsTimestamp,proto3" json:"observations_timestamp,omitempty"`
	Benchmark             []byte `protobuf:"bytes,3,opt,name=benchmark,proto3" json:"benchmark,omitempty"`
	Report                []byte `protobuf:"bytes,4,opt,name=report,proto3" json:"report,omitempty"`
	// Notice: benchmark_val is the benchmark i192 on-chain value decoded as an double (float64), scaled by number of decimals (e.g., 1e-18)
	// This is the largest type Prometheus supports, and this conversion can overflow but so far was sufficient
	// for most use-cases. For big numbers, benchmark bytes should be used instead.
	//
	// Set as `math.NaN()` if report data type not a number, or `+/-Inf` if number doesn't fit in double.
	BenchmarkVal    float64                 `protobuf:"fixed64,5,opt,name=benchmark_val,json=benchmarkVal,proto3" json:"benchmark_val,omitempty"`
	BlockData       *common.BlockData       `protobuf:"bytes,6,opt,name=block_data,json=blockData,proto3" json:"block_data,omitempty"`
	Bundle          []byte                  `protobuf:"bytes,9,opt,name=bundle,proto3" json:"bundle,omitempty"`
	TransactionData *common.TransactionData `protobuf:"bytes,10,opt,name=transaction_data,json=transactionData,proto3" json:"transaction_data,omitempty"`
	// [Execution Context]
	ExecutionContext *monitoring.ExecutionContext `protobuf:"bytes,20,opt,name=execution_context,json=executionContext,proto3" json:"execution_context,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FeedUpdated) Reset() {
	*x = FeedUpdated{}
	mi := &file_feed_updated_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedUpdated) ProtoMessage() {}

func (x *FeedUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_feed_updated_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedUpdated.ProtoReflect.Descriptor instead.
func (*FeedUpdated) Descriptor() ([]byte, []int) {
	return file_feed_updated_proto_rawDescGZIP(), []int{0}
}

func (x *FeedUpdated) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

func (x *FeedUpdated) GetObservationsTimestamp() uint32 {
	if x != nil {
		return x.ObservationsTimestamp
	}
	return 0
}

func (x *FeedUpdated) GetBenchmark() []byte {
	if x != nil {
		return x.Benchmark
	}
	return nil
}

func (x *FeedUpdated) GetReport() []byte {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *FeedUpdated) GetBenchmarkVal() float64 {
	if x != nil {
		return x.BenchmarkVal
	}
	return 0
}

func (x *FeedUpdated) GetBlockData() *common.BlockData {
	if x != nil {
		return x.BlockData
	}
	return nil
}

func (x *FeedUpdated) GetBundle() []byte {
	if x != nil {
		return x.Bundle
	}
	return nil
}

func (x *FeedUpdated) GetTransactionData() *common.TransactionData {
	if x != nil {
		return x.TransactionData
	}
	return nil
}

func (x *FeedUpdated) GetExecutionContext() *monitoring.ExecutionContext {
	if x != nil {
		return x.ExecutionContext
	}
	return nil
}

var File_feed_updated_proto protoreflect.FileDescriptor

const file_feed_updated_proto_rawDesc = "" +
	"\n" +
	"\x12feed_updated.proto\x12\x1bdatafeeds.on_chain.registry\x1a\"monitoring/execution_context.proto\x1a>capabilities/writetarget/monitoring/pb/common/block_data.proto\x1aDcapabilities/writetarget/monitoring/pb/common/transaction_data.proto\"\x91\x03\n" +
	"\vFeedUpdated\x12\x17\n" +
	"\afeed_id\x18\x01 \x01(\tR\x06feedId\x125\n" +
	"\x16observations_timestamp\x18\x02 \x01(\rR\x15observationsTimestamp\x12\x1c\n" +
	"\tbenchmark\x18\x03 \x01(\fR\tbenchmark\x12\x16\n" +
	"\x06report\x18\x04 \x01(\fR\x06report\x12#\n" +
	"\rbenchmark_val\x18\x05 \x01(\x01R\fbenchmarkVal\x120\n" +
	"\n" +
	"block_data\x18\x06 \x01(\v2\x11.common.BlockDataR\tblockData\x12\x16\n" +
	"\x06bundle\x18\t \x01(\fR\x06bundle\x12B\n" +
	"\x10transaction_data\x18\n" +
	" \x01(\v2\x17.common.TransactionDataR\x0ftransactionData\x12I\n" +
	"\x11execution_context\x18\x14 \x01(\v2\x1c.monitoring.ExecutionContextR\x10executionContextB\fZ\n" +
	".;registryb\x06proto3"

var (
	file_feed_updated_proto_rawDescOnce sync.Once
	file_feed_updated_proto_rawDescData []byte
)

func file_feed_updated_proto_rawDescGZIP() []byte {
	file_feed_updated_proto_rawDescOnce.Do(func() {
		file_feed_updated_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_feed_updated_proto_rawDesc), len(file_feed_updated_proto_rawDesc)))
	})
	return file_feed_updated_proto_rawDescData
}

var file_feed_updated_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_feed_updated_proto_goTypes = []any{
	(*FeedUpdated)(nil),                 // 0: datafeeds.on_chain.registry.FeedUpdated
	(*common.BlockData)(nil),            // 1: common.BlockData
	(*common.TransactionData)(nil),      // 2: common.TransactionData
	(*monitoring.ExecutionContext)(nil), // 3: monitoring.ExecutionContext
}
var file_feed_updated_proto_depIdxs = []int32{
	1, // 0: datafeeds.on_chain.registry.FeedUpdated.block_data:type_name -> common.BlockData
	2, // 1: datafeeds.on_chain.registry.FeedUpdated.transaction_data:type_name -> common.TransactionData
	3, // 2: datafeeds.on_chain.registry.FeedUpdated.execution_context:type_name -> monitoring.ExecutionContext
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_feed_updated_proto_init() }
func file_feed_updated_proto_init() {
	if File_feed_updated_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_feed_updated_proto_rawDesc), len(file_feed_updated_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_feed_updated_proto_goTypes,
		DependencyIndexes: file_feed_updated_proto_depIdxs,
		MessageInfos:      file_feed_updated_proto_msgTypes,
	}.Build()
	File_feed_updated_proto = out.File
	file_feed_updated_proto_goTypes = nil
	file_feed_updated_proto_depIdxs = nil
}
