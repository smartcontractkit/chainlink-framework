// Code generated by mockery v2.53.0. DO NOT EDIT.

package multinode

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockNodeMetrics is an autogenerated mock type for the nodeMetrics type
type mockNodeMetrics struct {
	mock.Mock
}

type mockNodeMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *mockNodeMetrics) EXPECT() *mockNodeMetrics_Expecter {
	return &mockNodeMetrics_Expecter{mock: &_m.Mock}
}

// IncrementNodeTransitionsToAlive provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeTransitionsToAlive(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeTransitionsToAlive_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeTransitionsToAlive'
type mockNodeMetrics_IncrementNodeTransitionsToAlive_Call struct {
	*mock.Call
}

// IncrementNodeTransitionsToAlive is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeTransitionsToAlive(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeTransitionsToAlive_Call {
	return &mockNodeMetrics_IncrementNodeTransitionsToAlive_Call{Call: _e.mock.On("IncrementNodeTransitionsToAlive", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToAlive_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeTransitionsToAlive_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToAlive_Call) Return() *mockNodeMetrics_IncrementNodeTransitionsToAlive_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToAlive_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeTransitionsToAlive_Call {
	_c.Run(run)
	return _c
}

// IncrementNodeTransitionsToInSync provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeTransitionsToInSync(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeTransitionsToInSync_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeTransitionsToInSync'
type mockNodeMetrics_IncrementNodeTransitionsToInSync_Call struct {
	*mock.Call
}

// IncrementNodeTransitionsToInSync is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeTransitionsToInSync(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeTransitionsToInSync_Call {
	return &mockNodeMetrics_IncrementNodeTransitionsToInSync_Call{Call: _e.mock.On("IncrementNodeTransitionsToInSync", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToInSync_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeTransitionsToInSync_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToInSync_Call) Return() *mockNodeMetrics_IncrementNodeTransitionsToInSync_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToInSync_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeTransitionsToInSync_Call {
	_c.Run(run)
	return _c
}

// IncrementNodeTransitionsToInvalidChainID provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeTransitionsToInvalidChainID(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeTransitionsToInvalidChainID'
type mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call struct {
	*mock.Call
}

// IncrementNodeTransitionsToInvalidChainID is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeTransitionsToInvalidChainID(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call {
	return &mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call{Call: _e.mock.On("IncrementNodeTransitionsToInvalidChainID", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call) Return() *mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeTransitionsToInvalidChainID_Call {
	_c.Run(run)
	return _c
}

// IncrementNodeTransitionsToOutOfSync provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeTransitionsToOutOfSync(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeTransitionsToOutOfSync'
type mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call struct {
	*mock.Call
}

// IncrementNodeTransitionsToOutOfSync is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeTransitionsToOutOfSync(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call {
	return &mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call{Call: _e.mock.On("IncrementNodeTransitionsToOutOfSync", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call) Return() *mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeTransitionsToOutOfSync_Call {
	_c.Run(run)
	return _c
}

// IncrementNodeTransitionsToSyncing provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeTransitionsToSyncing(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeTransitionsToSyncing'
type mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call struct {
	*mock.Call
}

// IncrementNodeTransitionsToSyncing is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeTransitionsToSyncing(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call {
	return &mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call{Call: _e.mock.On("IncrementNodeTransitionsToSyncing", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call) Return() *mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeTransitionsToSyncing_Call {
	_c.Run(run)
	return _c
}

// IncrementNodeTransitionsToUnreachable provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeTransitionsToUnreachable(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeTransitionsToUnreachable'
type mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call struct {
	*mock.Call
}

// IncrementNodeTransitionsToUnreachable is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeTransitionsToUnreachable(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call {
	return &mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call{Call: _e.mock.On("IncrementNodeTransitionsToUnreachable", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call) Return() *mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeTransitionsToUnreachable_Call {
	_c.Run(run)
	return _c
}

// IncrementNodeTransitionsToUnusable provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeTransitionsToUnusable(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeTransitionsToUnusable'
type mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call struct {
	*mock.Call
}

// IncrementNodeTransitionsToUnusable is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeTransitionsToUnusable(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call {
	return &mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call{Call: _e.mock.On("IncrementNodeTransitionsToUnusable", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call) Return() *mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeTransitionsToUnusable_Call {
	_c.Run(run)
	return _c
}

// IncrementNodeVerifies provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeVerifies(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeVerifies_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeVerifies'
type mockNodeMetrics_IncrementNodeVerifies_Call struct {
	*mock.Call
}

// IncrementNodeVerifies is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeVerifies(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeVerifies_Call {
	return &mockNodeMetrics_IncrementNodeVerifies_Call{Call: _e.mock.On("IncrementNodeVerifies", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeVerifies_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeVerifies_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeVerifies_Call) Return() *mockNodeMetrics_IncrementNodeVerifies_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeVerifies_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeVerifies_Call {
	_c.Run(run)
	return _c
}

// IncrementNodeVerifiesFailed provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeVerifiesFailed(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeVerifiesFailed_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeVerifiesFailed'
type mockNodeMetrics_IncrementNodeVerifiesFailed_Call struct {
	*mock.Call
}

// IncrementNodeVerifiesFailed is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeVerifiesFailed(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeVerifiesFailed_Call {
	return &mockNodeMetrics_IncrementNodeVerifiesFailed_Call{Call: _e.mock.On("IncrementNodeVerifiesFailed", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeVerifiesFailed_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeVerifiesFailed_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeVerifiesFailed_Call) Return() *mockNodeMetrics_IncrementNodeVerifiesFailed_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeVerifiesFailed_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeVerifiesFailed_Call {
	_c.Run(run)
	return _c
}

// IncrementNodeVerifiesSuccess provides a mock function with given fields: ctx, nodeName
func (_m *mockNodeMetrics) IncrementNodeVerifiesSuccess(ctx context.Context, nodeName string) {
	_m.Called(ctx, nodeName)
}

// mockNodeMetrics_IncrementNodeVerifiesSuccess_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementNodeVerifiesSuccess'
type mockNodeMetrics_IncrementNodeVerifiesSuccess_Call struct {
	*mock.Call
}

// IncrementNodeVerifiesSuccess is a helper method to define mock.On call
//   - ctx context.Context
//   - nodeName string
func (_e *mockNodeMetrics_Expecter) IncrementNodeVerifiesSuccess(ctx interface{}, nodeName interface{}) *mockNodeMetrics_IncrementNodeVerifiesSuccess_Call {
	return &mockNodeMetrics_IncrementNodeVerifiesSuccess_Call{Call: _e.mock.On("IncrementNodeVerifiesSuccess", ctx, nodeName)}
}

func (_c *mockNodeMetrics_IncrementNodeVerifiesSuccess_Call) Run(run func(ctx context.Context, nodeName string)) *mockNodeMetrics_IncrementNodeVerifiesSuccess_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeVerifiesSuccess_Call) Return() *mockNodeMetrics_IncrementNodeVerifiesSuccess_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockNodeMetrics_IncrementNodeVerifiesSuccess_Call) RunAndReturn(run func(context.Context, string)) *mockNodeMetrics_IncrementNodeVerifiesSuccess_Call {
	_c.Run(run)
	return _c
}

// newMockNodeMetrics creates a new instance of mockNodeMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockNodeMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockNodeMetrics {
	mock := &mockNodeMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
