// Code generated by mockery v2.53.0. DO NOT EDIT.

package multinode

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockTransactionSenderMetrics is an autogenerated mock type for the transactionSenderMetrics type
type mockTransactionSenderMetrics struct {
	mock.Mock
}

type mockTransactionSenderMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *mockTransactionSenderMetrics) EXPECT() *mockTransactionSenderMetrics_Expecter {
	return &mockTransactionSenderMetrics_Expecter{mock: &_m.Mock}
}

// IncrementInvariantViolations provides a mock function with given fields: ctx, invariant
func (_m *mockTransactionSenderMetrics) IncrementInvariantViolations(ctx context.Context, invariant string) {
	_m.Called(ctx, invariant)
}

// mockTransactionSenderMetrics_IncrementInvariantViolations_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementInvariantViolations'
type mockTransactionSenderMetrics_IncrementInvariantViolations_Call struct {
	*mock.Call
}

// IncrementInvariantViolations is a helper method to define mock.On call
//   - ctx context.Context
//   - invariant string
func (_e *mockTransactionSenderMetrics_Expecter) IncrementInvariantViolations(ctx interface{}, invariant interface{}) *mockTransactionSenderMetrics_IncrementInvariantViolations_Call {
	return &mockTransactionSenderMetrics_IncrementInvariantViolations_Call{Call: _e.mock.On("IncrementInvariantViolations", ctx, invariant)}
}

func (_c *mockTransactionSenderMetrics_IncrementInvariantViolations_Call) Run(run func(ctx context.Context, invariant string)) *mockTransactionSenderMetrics_IncrementInvariantViolations_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockTransactionSenderMetrics_IncrementInvariantViolations_Call) Return() *mockTransactionSenderMetrics_IncrementInvariantViolations_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockTransactionSenderMetrics_IncrementInvariantViolations_Call) RunAndReturn(run func(context.Context, string)) *mockTransactionSenderMetrics_IncrementInvariantViolations_Call {
	_c.Run(run)
	return _c
}

// newMockTransactionSenderMetrics creates a new instance of mockTransactionSenderMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockTransactionSenderMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockTransactionSenderMetrics {
	mock := &mockTransactionSenderMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
